-- ghc -prof -auto-all -o gloss glossModular.hs -O2 -threaded
-- ./gloss +RTS -p
-- somehow only really works with -O2


{-# LANGUAGE NoMonomorphismRestriction, FlexibleInstances, TypeSynonymInstances#-}
import Graphics.Gloss.Interface.Pure.Animate hiding (dim)
import Data.Array
import Data.List (unlines, lines, intersperse)
import Control.Monad (forM_, when, unless, liftM)
import Conway
import Animation

cellSize = 10
w = 610
wh = 305

foo = combAnim [ A (ft, spawn  x y) |  x <- [1..21], y <- [1..21], x /= y, x /= (21-y) ]
bar = combAnim [ A (ft, kill   x y) |  x <- [1..21], y <- [1..21], x /= y, x /= (21-y)]
baz = cycle [foo, bar]

main = do
   runState foo 0


foo = do
   n <- get
   liftIO $ putStrLn $ unlines $ deltaToString $ (deltaGridList gr) !! n
   put (n+1)


--animationList ::  [Animation]
animationList gr = map (\g -> combAnim (transf g) ) (deltaGridList gr)
-- Slower if animationList depends on grid?


grid3 = stringToGrid ["..........#..........", 
                     "..........#..........", 
                     "..........#..........", 
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#..........",
                     "..........#.........."]
grid = stringToGrid [
                     "..............................#..............................", 
                     "..............................#..............................", 
                     "..............................#..............................", 
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................", 
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     ".............................................................",
                     ".............................................................",
                     ".............................................................",
                     ".............................................................",
                     ".............................................................",
                     ".............................................................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "############......########################......#############",
                     "..............................#..............................", 
                     "..............................#..............................", 
                     "..............................#..............................", 
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     ".............................................................",
                     ".............................................................", 
                     ".............................................................",
                     ".............................................................",
                     ".............................................................",
                     ".............................................................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#..............................",
                     "..............................#.............................."
                     ]

grid2 = stringToGrid ["....................", 
                     ".....#..............", 
                     "....#...............", 
                     "....###.............",
                     "....................",
                     ".........#..........",
                     "........#...........",
                     "........###.........",
                     "....................",
                     "....................",
                     "...............#....",
                     "..............#.....",
                     "..............###...",
                     "....................",
                     "....................",
                     "....................",
                     "....................",
                     "....................",
                     "....................",
                     "...................."]

